{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","shared/hooks/http-hook.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/components/UIElements/marker.png","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","Card","style","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","console","log","useEffect","forEach","abortCtrl","abort","clearError","ErrorModal","onCancel","onClear","header","show","footer","ModalOverlay","modalContent","headerClasss","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","module","exports","Map","center","zoom","mapRef","mapboxgl","accessToken","process","map","container","features","geometry","coordinates","lng","lat","marker","el","createElement","backgroundImage","markerImg","Marker","setLngLat","addTo","ref","PlaceItem","auth","useContext","AuthContext","showMap","setShowMap","showConfirmModal","setShowConfirmModal","cancelDeleteHandler","confirmDeleteHandler","id","Authorization","token","onDelete","closeMapHandler","address","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","PlaceList","items","length","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","places","fetchPlaces","deletedPlaceId","prevPlaces"],"mappings":"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","file":"static/js/7.f24931a2.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = (props) => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${\n          props.inverse && 'button--inverse'\n        } ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${\n          props.inverse && 'button--inverse'\n        } ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${\n        props.inverse && 'button--inverse'\n      } ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  // useRef built in React hook, turns data into reference that will not change\n  // or for this usage, will not be reinitialized when function runs again (function runs again when component rerenders)\n  // makes it so data is stored across rerender cycles\n  const activeHttpRequests = useRef([]);\n\n  // wrap in useCallback to prevent function from being recreated causing infinite loop\n  // ex, us how sendRequest is used in Users.js file\n  // when called in that file, is techincally considered a new object function when sendRequest is called, a\n  // and therefore, this would repeatedly run and rerender in a loop\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      // function supported in modern browswers\n      const httpAbortCtrl = new AbortController();\n      // useRef always wraps data in object that has current method\n      // current holds array that doesn't change between rerender cycles\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method, // method: method\n          body,\n          headers,\n          // links abort controller to request\n          // abort controller will cancel the request\n          signal: httpAbortCtrl.signal,\n        });\n\n        const responseData = await response.json();\n        //         ^                ^\n        // once have response, know that request completed\n\n        // if request completes, need to remove abortController from array of abortControllers\n\n        // filter out controller responsible for the specific request that completed\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          // remove requestController resonsible for request\n          // i.e. keep every contoller, except for the one used for this request\n          // prevents having old request controller which would then try to cancel request not on it's way anymore\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\n        );\n\n        // check if response returned from request is 400 or 500'ish\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        console.log(err.message);\n        setIsLoading(false);\n        // throw error so component using hook knows that someting went wrong\n        throw err;\n      }\n    },\n    [] // useCallback has no dependencies (so will only run once)\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  // only runs once\n  // whole purpose of abort controller is to make sure to never continue with a request that is on it's way out\n  // if user switches away from component that triggered request (example navigatin to new page)\n  useEffect(() => {\n    // returned function in first arg function executes as a 'clean up' function\n    // before the next time useEffect runs again OR when component that uses useEffect unmounts (i.e. component using the custom hook create with this file)\n\n    return () => {\n      activeHttpRequests.current.forEach((abortCtrl) => {\n        console.log(abortCtrl.abort);\n      });\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n\n\n\n// mac@test.com\n// testy123\n\n\n\n// axios.post('https:sample-endpoint.com/user', {\n// \tName: 'Fred',\n// \tAge: '23'\n// })\n// .then(function (response) {\n// \tconsole.log(response);\n// })\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = (props) => {\n  const modalContent = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClasss}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : (event) => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n\n  return ReactDOM.createPortal(\n    modalContent,\n    document.getElementById('modal-hook')\n  );\n};\n\nconst Modal = (props) => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n\t\t\t\t            {/* passes props set on Modal to ModalOverlay */}\n        <ModalOverlay  {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","module.exports = __webpack_public_path__ + \"static/media/marker.4fe204a8.png\";","import React, { useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\n\nimport './Map.css';\nimport markerImg from './marker.png';\n\nconst Map = (props) => {\n  const { center, zoom } = props;\n  console.log(center);\n  const mapRef = useRef();\n\n  // use effect helps ensure jsx returned renders before functions related to rendering map executes\n  useEffect(() => {\n    mapboxgl.accessToken = process.env.REACT_APP_MAPBOX_API_KEY;\n    const map = new mapboxgl.Map({\n      container: mapRef.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: center,\n      zoom: zoom,\n    });\n    // new mapboxgl.Marker({ position: center, map: map });}\n\n    var geojson = {\n      type: 'FeatureCollection',\n      features: [\n        {\n          type: 'Feature',\n          geometry: {\n            type: 'Point',\n            coordinates: [center.lng, center.lat],\n          },\n        },\n      ],\n    };\n\n    // add markers to map\n    geojson.features.forEach(function (marker) {\n      // create a HTML element for each feature\n      var el = document.createElement('div');\n      el.className = 'marker';\n      el.style.backgroundImage = 'url(\"' + markerImg + '\")';\n\n      // make a marker for each feature and add to the map\n      new mapboxgl.Marker(el).setLngLat(marker.geometry.coordinates).addTo(map);\n    });\n  }, [center, zoom]);\n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n    ></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nimport './PlaceItem.css';\n\nconst PlaceItem = (props) => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\n        'DELETE',\n        null,\n        { Authorization: 'Bearer ' + auth.token }\n      );\n      // id of plcae to be deleted (referred to in UserPlaces.js as 'deletedPlaceId' in placeDeleteHandler function\n      props.onDelete(props.id);\n    } catch (err) {\n      // handled by hook\n    }\n  };\n\n  const openMapHandler = () => {\n    setShowMap(true);\n  };\n\n  const closeMapHandler = () => {\n    setShowMap(false);\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place. Please note this can't\n          be undone after clicked.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\n\nimport './PlaceList.css';\n\nconst PlaceList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Create one?</h2>\n          <Button to=\"/places/new/\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map((place) => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n\n        setLoadedPlaces(responseData.places);\n      } catch (err) {\n\t\t\t\t// needed to make sure that if user has NO places and clicks on to another person,\n\t\t\t\t// then clicks 'My Places', and error doesn't occur\n        setLoadedPlaces([]);\n        // handled by hook\n      }\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = (deletedPlaceId) => {\n    // prevPlaces standing in for state of places that get loaded\n    setLoadedPlaces(\n      (prevPlaces) =>\n        //                         if id being compared is NOT the same as deletedPlaceId passed, keep it, if it is, filter out\n        prevPlaces.filter((place) => place.id !== deletedPlaceId)\n      // state (prevPlaces) gets returned as new array via filter method that does not include deletedPlaceId (is filtered out)\n    );\n  };\n\n  // for future reference back to when this was tested with Dummy Data\n  //const loadedPlaces = DUMMY_PLACES.filter((place) => place.creator === userId);\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n"],"sourceRoot":""}